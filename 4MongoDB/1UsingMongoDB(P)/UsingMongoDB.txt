Create a database called 'my_first_db'.
-- use my_first_db

Create students collection.
-- db.createCollection("students")

Create 5 students with the appropriate info.
1) db.students.insert({name: "Bob", home_state: "California", lucky_number: 10, birthday: {month: 1, day: 1, year: 1990}})
2) db.students.insert({name: "Greg", home_state: "California", lucky_number: 14, birthday: {month: 12, day: 1, year: 1990}})
3) db.students.insert({name: "Dave", home_state: "Washington", lucky_number: 7, birthday: {month: 6, day: 1, year: 1990}})
4) db.students.insert({name: "Jenna", home_state: "Washington", lucky_number: 4, birthday: {month: 3, day: 1, year: 1990}})
5) db.students.insert({name: "Jean", home_state: "Washington", lucky_number: 1, birthday: {month: 8, day: 1, year: 1990}})

Get all students.
-- db.students.find()

Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
-- db.students.find({home_state: "California"})

Get all students whose lucky number is greater than 3
-- db.students.find({lucky_number: {$gt:3}})

Get all students whose lucky number is less than or equal to 10
-- db.students.find({lucky_number: {$lte:10}})

Get all students whose lucky number is between 1 and 9 (inclusive)
-- db.students.find({$and:[{lucky_number: {$gte:1}},{lucky_number: {$lte:9}}]})

Add a field named 'interests' to all student documents in the collection. The field should be an array and contain the following entries: 'coding', 'brunch', MongoDB'. Add this field to all documents using a single command.
-- db.students.update({},{$set:{interests: ["coding","brunch","MongoDB"]}},{multi:true})

Add some unique interests for each particular student into each of their interest arrays.
1) db.students.update({name:"Bob"},{$push:{interests: "eating"}})
2) db.students.update({name:"Greg"},{$push:{interests: "spinning"}})
3) db.students.update({name:"Dave"},{$push:{interests: "reading"}})
4) db.students.update({name:"Jenna"},{$push:{interests: "soccer"}})
5) db.students.update({name:"Jean"},{$push:{interests: "basketball"}})

Add the interest 'taxes' into someone's interest array.
-- db.students.update({name:"Jean"},{$push:{interests: "taxes"}})

Remove the 'taxes' interest you just added.
-- db.students.update({name:"Jean"},{$pull:{interests: "taxes"}})

Remove all students who are from California.
-- db.students.remove({home_state:"California"})

Remove a student by name.
-- db.students.remove({name:"Jean"})

Remove a student whose lucky number is greater than 5 (JUST ONE)
-- db.students.remove({lucky_number:{$gt:5}},true)

Add a field to each student collection called 'number_of_belts' and set it to 0.
-- db.students.update({},{$set:{number_of_belts: 0}})

Increment this field by 1 for all students in Washington (Seattle Dojo).
-- db.students.update({home_state:"Washington"},{$inc:{number_of_belts: 1}},{multi:true})

Rename the 'number_of_belts' field to 'belts_earned'
-- db.students.update({},{$rename:{number_of_belts:"belts_earned"}},{multi:true})

Remove the 'lucky_number' field.
-- db.students.update({},{$unset:{lucky_number:""}},{multi:true})

Add a 'updated_on' field, and set the value as the current date.
-- db.students.update({},{$currentDate:{updated_on:{$type:"date"}}},{multi:true})
or
--  db.students.update({},{$set:{updated_on:Date()}},{multi:true})
second option gives EST time and doesn't use ISODate